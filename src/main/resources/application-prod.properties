# Production Environment Configuration

# Database Configuration
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/attendance_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000

# Database Cleanup Configuration - Controlled by ConditionalFlywayMigrationStrategy
# Set to 'true' (e.g., via APP_DATABASE_CLEANUP_ENABLED env var) to clean DB before migration.
# WARNING: This will delete all data in the public schema. Defaults to false.
# app.database.cleanup.enabled=true
app.database.cleanup.enabled=false

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Flyway Database Migration Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=true
spring.flyway.postgresql.transactional.lock=false

# Server Configuration - FIXED FOR RENDER
server.port=8080
server.servlet.context-path=/api
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=20

# Logging Configuration
logging.level.org.springframework=INFO
logging.level.com.college.attendance=INFO
logging.level.org.flywaydb=DEBUG

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
app.file.upload-dir=./prod-uploads

# JWT Configuration
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration-ms=${JWT_EXPIRATION_MS:86400000}

# Email Configuration (Production)
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# Custom sender email that will be used as the FROM address
# This must be a verified sender in Brevo
spring.mail.from=${MAIL_FROM}

# Cloudinary Configuration (Production - Read from Environment Variables)
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}

# Actuator Configuration
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=never
management.endpoint.health.probes.enabled=true

# Network verification for production
attendance.network.verification.enabled=false
attendance.network.verification.simulated=false